{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":";;;;;;AAAA,sEAAyC;AACzC,oDAAuB;AACvB,+CAAyC;AACzC,gDAA+C;AAE/C,6DAA6D;AAC7D,aAAa;AACb,mEAA0C;AAE1C,mCAQiB;AACjB,2CAA2C;AAE3C,SAAgB,yBAAyB,CAAC,gBAAkC;IAC1E,OAAO,gBAAgB,CAAC,MAAM,KAAK,gCAAwB,CAAC,OAAO,CAAC;AACtE,CAAC;AAFD,8DAEC;AAEM,MAAM,gCAAgC,GAAG,CAC9C,SAA2C,EAC3C,EAAE,CAAC,SAAS,KAAK,gBAAgB,CAAC;AAFvB,QAAA,gCAAgC,oCAET;AAEpC,0CAA0C;AAC1C,SAAgB,gBAAgB,CAAC,OAAgB,EAAE,OAAe;IAChE,MAAM,UAAU,GAAG,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IACzC,QAAQ,OAAO,EAAE;QACf,KAAK,eAAO,CAAC,QAAQ,CAAC,CAAC;YACrB,OAAO,GAAG,wBAAY,aAAa,UAAU,UAAU,CAAC;SACzD;QAED,KAAK,eAAO,CAAC,YAAY,CAAC,CAAC;YACzB,OAAO,GAAG,wBAAY,aAAa,UAAU,cAAc,CAAC;SAC7D;QAED,KAAK,eAAO,CAAC,mBAAmB,CAAC,CAAC;YAChC,OAAO,GAAG,wBAAY,aAAa,UAAU,4CAA4C,sBAAW,CAAC,OAAO,EAAE,CAAC;SAChH;QAED,KAAK,eAAO,CAAC,MAAM,CAAC,CAAC;YACnB,OAAO,GAAG,wBAAY,aAAa,UAAU,SAAS,CAAC;SACxD;QAED,KAAK,eAAO,CAAC,YAAY,CAAC,CAAC;YACzB,OAAO,GAAG,wBAAY,aAAa,UAAU,cAAc,CAAC;SAC7D;QAED,KAAK,eAAO,CAAC,QAAQ,CAAC,CAAC;YACrB,OAAO,GAAG,wBAAY,aAAa,UAAU,SAAS,CAAC;SACxD;QAED,OAAO,CAAC,CAAC;YACP,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,8CAA8C;SACnF;KACF;AACH,CAAC;AA/BD,4CA+BC;AAEM,MAAM,eAAe,GAAG,CAAC,SAAkC,EAAE,EAAE;IACpE,IAAI,IAAA,wCAAgC,EAAC,SAAS,CAAC,EAAE;QAC/C,OAAO,gCAAwB,CAAC,QAAQ,CAAC;KAC1C;IACD,MAAM,aAAa,GAAG;QACpB,0CAAkC,CAAC,YAAY;QAC/C,0CAAkC,CAAC,SAAS;QAC5C,0CAAkC,CAAC,eAAe;QAClD,0CAAkC,CAAC,aAAa;QAChD,0CAAkC,CAAC,cAAc;QACjD,0CAAkC,CAAC,qBAAqB;KACzD,CAAC;IACF,IAAI,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,OAAO,MAAK,+BAAuB,CAAC,SAAS,EAAE;QAC5D,IACE,SAAS,CAAC,kBAAkB;YAC5B,0CAAkC,CAAC,aAAa,EAChD;YACA,OAAO,gCAAwB,CAAC,OAAO,CAAC;SACzC;QAED,MAAM,cAAc,GAClB,aAAa,CAAC,SAAS,CACrB,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,KAAK,SAAS,CAAC,kBAAkB,CAChE,GAAG,CAAC,CAAC,CAAC;QACT,IAAI,SAAS,CAAC,kBAAkB,IAAI,cAAc,EAAE;YAClD,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;gBACxB,OAAO,gCAAwB,CAAC,OAAO,CAAC;aACzC;YACD,OAAO,qCAA6B,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;SACpE;KACF;SAAM,IAAI,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,OAAO,MAAK,+BAAuB,CAAC,OAAO,EAAE;QACjE,OAAO,gCAAwB,CAAC,OAAO,CAAC;KACzC;SAAM,IAAI,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,OAAO,MAAK,+BAAuB,CAAC,SAAS,EAAE;QACnE,OAAO,gCAAwB,CAAC,SAAS,CAAC;KAC3C;SAAM,IAAI,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,OAAO,MAAK,+BAAuB,CAAC,QAAQ,EAAE;QAClE,OAAO,gCAAwB,CAAC,QAAQ,CAAC;KAC1C;SAAM,IAAI,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,OAAO,MAAK,+BAAuB,CAAC,OAAO,EAAE;QACjE,OAAO,gCAAwB,CAAC,OAAO,CAAC;KACzC;IACD,OAAO,gCAAwB,CAAC,OAAO,CAAC;AAC1C,CAAC,CAAC;AAxCW,QAAA,eAAe,mBAwC1B;AAEF;;;;;;;;;;;EAWE;AACF,SAAgB,oBAAoB,CAClC,aAAkB,EAClB,QAAa,EACb,IAAY;IAEZ,MAAM,KAAK,GAAQ,yBAAU,CAAC,OAAO,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;IAC/D,2EAA2E;IAC3E,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;QACZ,IAAI,IAAI,EAAE;YACR,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;SACtB;QAED,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;KACjC;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAfD,oDAeC;AAED;;;EAGE;AACF,SAAgB,aAAa,CAAC,aAAkB;IAC9C,MAAM,YAAY,GAAG,gBAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;IAChD,OAAO,YAAY,CAAC,MAAM,CACxB,CAAC,GAAQ,EAAE,KAAU,EAAE,EAAE,CAAC,yBAAU,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,WAAW,CACxE,CAAC;AACJ,CAAC;AALD,sCAKC;AAED;;;;GAIG;AACH,SAAgB,kBAAkB,CAAC,MAAW;IAC5C,MAAM,OAAO,qBAAQ,MAAM,CAAE,CAAC;IAC9B,OAAO,OAAO,CAAC,OAAO,CAAC;IACvB,OAAO,gBAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAC9B,CAAC;AAJD,gDAIC;AAED;;;;GAIG;AACI,MAAM,oBAAoB,GAAG,CAClC,6BAAiD,EAC7B,EAAE;IACtB,IAAI,CAAC,6BAA6B,EAAE;QAClC,OAAO,SAAS,CAAC;KAClB;IACD,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,6BAA6B,CAAC,GAAG,IAAI,CAAC,CAAC;AACzE,CAAC,CAAC;AAPW,QAAA,oBAAoB,wBAO/B;AAEK,MAAM,cAAc,GAAG,CAC5B,GAAwB,EACH,EAAE;IACvB,IAAI,CAAC,gBAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACpB,OAAO,GAAG,CAAC;KACZ;IACD,MAAM,YAAY,GAAG,gBAAC,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAwB,EAAE,EAAE;QACjE,IAAI,gBAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAClB,OAAO,GAAG,CAAC,GAAG,CAAC,sBAAc,CAAC,CAAC;SAChC;aAAM,IAAI,gBAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YAC1B,OAAO,IAAA,sBAAc,EAAC,GAAG,CAAC,CAAC;SAC5B;QACD,OAAO,GAAG,CAAC;IACb,CAAC,CAAC,CAAC;IACH,6DAA6D;IAC7D,OAAO,gBAAC,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,gBAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC;AAhBW,QAAA,cAAc,kBAgBzB;AAEK,KAAK,UAAU,WAAW,CAAC,OAAe,EAAE,OAAqB;IACtE,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC/C,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IACnC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;QAChB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAClC,MAAM,IAAI,KAAK,CACb,eAAe,IAAI,CAAC,SAAS,iBAC3B,MAAM,EAAE,QAAQ,CAAC,MAAM,IACpB,IAAA,sBAAc,EAAC,IAAI,CAAC,EACvB,EAAE,CACL,CAAC;KACH;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAbD,kCAaC;AAEM,MAAM,6BAA6B,GAAG,CAC3C,SAAkC,EACzB,EAAE;IACX,OAAO,CACL,SAAS,CAAC,OAAO,KAAK,+BAAuB,CAAC,SAAS;QACvD,CAAC,CAAC,SAAS,CAAC,kBAAkB;YAC5B,SAAS,CAAC,kBAAkB;gBAC1B,0CAAkC,CAAC,aAAa,CAAC,CACtD,CAAC;AACJ,CAAC,CAAC;AATW,QAAA,6BAA6B,iCASxC;AAEK,MAAM,mBAAmB,GAAG,CAAC,UAAkB,EAAU,EAAE;IAChE,MAAM,UAAU,GAAG,IAAI,wBAAS,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC9D,OAAO,IAAA,eAAO,EAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC;AAHW,QAAA,mBAAmB,uBAG9B","sourcesContent":["import jsonDiffer from 'fast-json-patch';\nimport _ from 'lodash';\nimport { BigNumber } from 'bignumber.js';\nimport { hexlify } from '@ethersproject/bytes';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport packageJson from '../package.json';\n\nimport {\n  APIType,\n  SmartTransaction,\n  SmartTransactionsStatus,\n  SmartTransactionStatuses,\n  SmartTransactionCancellationReason,\n  SmartTransactionMinedTx,\n  cancellationReasonToStatusMap,\n} from './types';\nimport { API_BASE_URL } from './constants';\n\nexport function isSmartTransactionPending(smartTransaction: SmartTransaction) {\n  return smartTransaction.status === SmartTransactionStatuses.PENDING;\n}\n\nexport const isSmartTransactionStatusResolved = (\n  stxStatus: SmartTransactionsStatus | string,\n) => stxStatus === 'uuid_not_found';\n\n// TODO use actual url once API is defined\nexport function getAPIRequestURL(apiType: APIType, chainId: string): string {\n  const chainIdDec = parseInt(chainId, 16);\n  switch (apiType) {\n    case APIType.GET_FEES: {\n      return `${API_BASE_URL}/networks/${chainIdDec}/getFees`;\n    }\n\n    case APIType.ESTIMATE_GAS: {\n      return `${API_BASE_URL}/networks/${chainIdDec}/estimateGas`;\n    }\n\n    case APIType.SUBMIT_TRANSACTIONS: {\n      return `${API_BASE_URL}/networks/${chainIdDec}/submitTransactions?stxControllerVersion=${packageJson.version}`;\n    }\n\n    case APIType.CANCEL: {\n      return `${API_BASE_URL}/networks/${chainIdDec}/cancel`;\n    }\n\n    case APIType.BATCH_STATUS: {\n      return `${API_BASE_URL}/networks/${chainIdDec}/batchStatus`;\n    }\n\n    case APIType.LIVENESS: {\n      return `${API_BASE_URL}/networks/${chainIdDec}/health`;\n    }\n\n    default: {\n      throw new Error(`Invalid APIType`); // It can never get here thanks to TypeScript.\n    }\n  }\n}\n\nexport const calculateStatus = (stxStatus: SmartTransactionsStatus) => {\n  if (isSmartTransactionStatusResolved(stxStatus)) {\n    return SmartTransactionStatuses.RESOLVED;\n  }\n  const cancellations = [\n    SmartTransactionCancellationReason.WOULD_REVERT,\n    SmartTransactionCancellationReason.TOO_CHEAP,\n    SmartTransactionCancellationReason.DEADLINE_MISSED,\n    SmartTransactionCancellationReason.INVALID_NONCE,\n    SmartTransactionCancellationReason.USER_CANCELLED,\n    SmartTransactionCancellationReason.PREVIOUS_TX_CANCELLED,\n  ];\n  if (stxStatus?.minedTx === SmartTransactionMinedTx.NOT_MINED) {\n    if (\n      stxStatus.cancellationReason ===\n      SmartTransactionCancellationReason.NOT_CANCELLED\n    ) {\n      return SmartTransactionStatuses.PENDING;\n    }\n\n    const isCancellation =\n      cancellations.findIndex(\n        (cancellation) => cancellation === stxStatus.cancellationReason,\n      ) > -1;\n    if (stxStatus.cancellationReason && isCancellation) {\n      if (!stxStatus.isSettled) {\n        return SmartTransactionStatuses.PENDING;\n      }\n      return cancellationReasonToStatusMap[stxStatus.cancellationReason];\n    }\n  } else if (stxStatus?.minedTx === SmartTransactionMinedTx.SUCCESS) {\n    return SmartTransactionStatuses.SUCCESS;\n  } else if (stxStatus?.minedTx === SmartTransactionMinedTx.CANCELLED) {\n    return SmartTransactionStatuses.CANCELLED;\n  } else if (stxStatus?.minedTx === SmartTransactionMinedTx.REVERTED) {\n    return SmartTransactionStatuses.REVERTED;\n  } else if (stxStatus?.minedTx === SmartTransactionMinedTx.UNKNOWN) {\n    return SmartTransactionStatuses.UNKNOWN;\n  }\n  return SmartTransactionStatuses.UNKNOWN;\n};\n\n/**\n  Generates an array of history objects sense the previous state.\n  The object has the keys\n    op (the operation performed),\n    path (the key and if a nested object then each key will be separated with a `/`)\n    value\n  with the first entry having the note and a timestamp when the change took place\n  @param previousState - the previous state of the object\n  @param newState - the update object\n  @param [note] - a optional note for the state change\n  @returns\n*/\nexport function generateHistoryEntry(\n  previousState: any,\n  newState: any,\n  note: string,\n) {\n  const entry: any = jsonDiffer.compare(previousState, newState);\n  // Add a note to the first op, since it breaks if we append it to the entry\n  if (entry[0]) {\n    if (note) {\n      entry[0].note = note;\n    }\n\n    entry[0].timestamp = Date.now();\n  }\n  return entry;\n}\n\n/**\n  Recovers previous txMeta state obj\n  @returns\n*/\nexport function replayHistory(_shortHistory: any) {\n  const shortHistory = _.cloneDeep(_shortHistory);\n  return shortHistory.reduce(\n    (val: any, entry: any) => jsonDiffer.applyPatch(val, entry).newDocument,\n  );\n}\n\n/**\n * Snapshot {@code txMeta}\n * @param txMeta - the tx metadata object\n * @returns a deep clone without history\n */\nexport function snapshotFromTxMeta(txMeta: any) {\n  const shallow = { ...txMeta };\n  delete shallow.history;\n  return _.cloneDeep(shallow);\n}\n\n/**\n * Returns processing time for an STX in seconds.\n * @param smartTransactionSubmittedtime\n * @returns Processing time in seconds.\n */\nexport const getStxProcessingTime = (\n  smartTransactionSubmittedtime: number | undefined,\n): number | undefined => {\n  if (!smartTransactionSubmittedtime) {\n    return undefined;\n  }\n  return Math.round((Date.now() - smartTransactionSubmittedtime) / 1000);\n};\n\nexport const mapKeysToCamel = (\n  obj: Record<string, any>,\n): Record<string, any> => {\n  if (!_.isObject(obj)) {\n    return obj;\n  }\n  const mappedValues = _.mapValues(obj, (val: Record<string, any>) => {\n    if (_.isArray(val)) {\n      return val.map(mapKeysToCamel);\n    } else if (_.isObject(val)) {\n      return mapKeysToCamel(val);\n    }\n    return val;\n  });\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  return _.mapKeys(mappedValues, (value, key) => _.camelCase(key));\n};\n\nexport async function handleFetch(request: string, options?: RequestInit) {\n  const response = await fetch(request, options);\n  const json = await response.json();\n  if (!response.ok) {\n    console.log(`response`, response);\n    throw new Error(\n      `Fetch error:${JSON.stringify({\n        status: response.status,\n        ...mapKeysToCamel(json),\n      })}`,\n    );\n  }\n  return json;\n}\n\nexport const isSmartTransactionCancellable = (\n  stxStatus: SmartTransactionsStatus,\n): boolean => {\n  return (\n    stxStatus.minedTx === SmartTransactionMinedTx.NOT_MINED &&\n    (!stxStatus.cancellationReason ||\n      stxStatus.cancellationReason ===\n        SmartTransactionCancellationReason.NOT_CANCELLED)\n  );\n};\n\nexport const incrementNonceInHex = (nonceInHex: string): string => {\n  const nonceInDec = new BigNumber(nonceInHex, 16).toString(10);\n  return hexlify(Number(nonceInDec) + 1);\n};\n"]}